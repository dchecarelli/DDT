{"name":"Ddt","tagline":"Se implementará un sistema adoptando la metodología ágil DDT","body":"package proyectoparajunit;\r\nimport java.util.*;\r\n/**\r\n * @author Diego\r\n * @see: aqui hay q poner la direccion del github Clase con métodos de utilidad\r\n * sobre Arrays de cadenas de caracteres\r\n */\r\npublic class ProyectoparaJunit {\r\n\r\n    // Atributos de la clase\r\n    private java.util.Vector<String> elements;\r\n    //Constructor \r\n     public ProyectoparaJunit(String[] data) {\r\n        // Verificamos que la lista tenga valores\r\n        if ((data == null) || (data.length == 0)) {\r\n            throw new IllegalArgumentException();\r\n        }\r\n\r\n        this.elements = new Vector<String>();\r\n        for (String element : data) {\r\n            elements.addElement(element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return Devuelve la cadena que tiene más caracteres\r\n     */\r\n    public String getMaxLength() {\r\n        String max = \"\";\r\n\r\n        for (String element : elements) {\r\n            if (element.length() > max.length()) {\r\n                max = element;\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @return Devuelve la suma de la longitud de todas las cadenas\r\n     */\r\n    public int getTotalLength() {\r\n        int total = 0;\r\n\r\n        for (String d : elements) {\r\n            total += d.length();\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    /**\r\n     * @param searched Cadena buscada\r\n     * @return Devuelve la posición de un elemento dentro del array\r\n     * @throws java.util.NoSuchElementException Si el elemento no existe en la\r\n     * lista\r\n     */\r\n    public int getIndexOf(String searched) throws java.util.NoSuchElementException {\r\n        int pos = 0;\r\n\r\n        // Comprobamos que el argumento sea válido\r\n        if (searched == null) {\r\n            throw new IllegalArgumentException();\r\n        }\r\n\r\n        // Recorremos la información hasta encontrar el elemento\r\n        for (String d : elements) {\r\n            if (d.equals(searched)) {\r\n                return pos;\r\n            }\r\n            pos++;\r\n        }\r\n\r\n        // El elemento no existia, lanzamos la excepción\r\n        throw new java.util.NoSuchElementException(searched);\r\n    }\r\n}","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}